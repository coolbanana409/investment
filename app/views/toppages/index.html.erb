<div class="ui center aligned grid" id="toppage">
  <div class="fourteen wide column" id="what-is-this-application">
    <h2>EventNavi とは</h2>
  </div>
  <div class="left aligned fourteen wide column" id="explanation-of-application">
    EventNavi とはあなたの身の回りで開催されているイベントを知るためのアプリです。
    新規登録、ログインをしていただきますと、各地で開かれているイベントの詳細について、ジャンルごとに検索できたり、
    もし、あなたがイベント主催者ならば、自分のイベントをこのサイトで紹介することができます。
  </div>
  <div class="toppage-divider ui divider"></div>
  <div class="characteristics-of-application fourteen wide column">
    <h2>EventNavi の特徴</h2>
  </div>
  <div id="major-characteristics">
    <div class="one-of-the-characteristics">
      <div class="ui center aligned grid">
        <div class="fourteen wide column">
          <i class="bullhorn huge icon"></i>
        </div>
        <div class="left aligned twelve wide column">
          もしあなたがイベントを主催しているのであれば、このアプリでそのイベントを拡散することで、
          イベントの集客数を増やすことができます。
        </div>
      </div>
    </div>
    <div class="one-of-the-characteristics">
      <div class="ui center aligned grid">
        <div class="fourteen wide column">
          <i class="search huge icon"></i>
        </div>
      </div>
      <div class="ui center aligned grid">
        <div class="left aligned twelve wide column">
          自分の周りで開催されているイベントを発見することができます。
          時系列による分類や、人気順などによる並び替えにより、あなたの探したいイベント簡単に探すことができます。
        </div>
      </div>
    </div>
    <div class="one-of-the-characteristics">
      <div class="ui center aligned grid">
        <div class="fourteen wide column">
          <i class="tags huge icon"></i>
        </div>
      </div>
      <div class="ui center aligned grid">
        <div class="left aligned twelve wide column">
          自分の好みのイベントをブックマークしておけば、いつでも気軽に、それらのイベントの詳細情報を知ることができます。
          また、自分の興味のある複数のイベントの情報を簡単に管理することができます。
        </div>
      </div>
    </div>
  </div>
  <div class="toppage-divider ui divider"></div>
  <div class="middle aligned fourteen wide column">
    <div class="use-for-trial">
      <h2>イベントを探してみよう</h2>
    </div>
  </div>
  <div class="left aligned fourteen wide column" id="lets-search">
    <div id="frame-of-lets-search">
      試しにあなたの身の回りのイベントを探してみましょう。
      まずは、住所を検索するか、位置情報を送信してみましょう。
    </div>
  </div>
  <div id="toppage-map" ref="toppageMap"></div>
  <div class="fourteen wide columm" id="search-address">
    <div class="item">
      <div class="ui icon input">
        <input id="address" type="text" name="address" placeholder="例：東京都渋谷区" ref="address">
        <i class="search link icon" @click="search()"></i>
        <input type="button" id="search" value="検索" @click="search()">
      </div>
    </div>
  </div>
  <div class="left aligned fourteen wide column" id="map-explanation">
    地図上の赤色のピンが立っている場所が今後イベントが行われる場所であり、
    ピンをタッチするとそのイベントの主要な情報を確認することができます。
    新規登録、またはログインをして、あなたの身の回りで今後行われるイベントの詳細を確認してみましょう。
  </div>
</div>

<script>
  var map;
  var geocoder = new google.maps.Geocoder();
  var vm = new Vue({
    el: "#toppage",
    methods: {
      makeEventsListMap: function() {
        <% @events.each do |event| %>
          var mapLatLng = new google.maps.LatLng(35.681236,139.767125);
          var pos;
          var markerData;
          var markerDataArray = [];
          var markerLatLng;
          var marker = [];
          var infoWindow = [];
          var currentInfoWindow;

          geocoder.geocode({
            'address': '<%= event.place %>',
            'region': 'jp'
          },function (results, status) {
              if (status === 'OK' && results[0]){
                pos = new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng());
                markerData = [
                  {
                    name: '<%= event.name %>',
                    place: '<%= event.place %>',
                    lat: pos.lat(),
                    lng: pos.lng(),
                  }
                ];
                map = new google.maps.Map(vm.$refs.toppageMap, {
                  center: mapLatLng,
                  zoom: 10,
                  mapTypeControl: false,
                  streetViewControl: false,
                  fullscreenControl: false,
                });

                markerDataArray.push(markerData);

                for (var i = 0; i < markerDataArray.length; i++) {
                  markerLatLng = new google.maps.LatLng({lat: markerDataArray[i][0].lat, lng: markerDataArray[i][0].lng});
                  marker[i] = new google.maps.Marker({
                    map: map,
                    position: markerLatLng
                  });
                };

                setTimeout(function(){
                  marker[i-1].addListener('click', function() {
                    infoWindow[i-1] = new google.maps.InfoWindow({
                      content: `
                        <div class="marker_name">
                          イベント名：<%= event.id %>
                          <a href="/events/<%= event.id %>">
                            ${markerDataArray[i-1][0].name}
                          </a>
                        </div>
                        <div class="marker_place">
                          開催地：${markerDataArray[i-1][0].place}
                        </div>
                      `
                    });

                    if (currentInfoWindow) {
                      currentInfoWindow.close();
                    };

                    infoWindow[i-1].open(map, marker[i-1]);
                    currentInfoWindow = infoWindow[i-1];
                  });
                }, 100);
              }else{
                alert('失敗しました。理由: ' + status);
              }
            }
          );
        <% end %>
      },
      search: function() {
        var inputAddress = this.$refs.address.value;

        geocoder.geocode({
          'address': inputAddress,
          'region': 'jp'
        },function (results, status) {
            if (status === 'OK' && results[0]) {
              map.setCenter(results[0].geometry.location);
            } else {
              alert('住所検索に失敗しました。住所が正しいか確認してください');
            }
          }
        );
      },
    },
    mounted: function() {
      this.makeEventsListMap();
    },
  });
</script>
