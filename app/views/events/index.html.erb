<% before_events_array = [] %>
<% current_events_array = [] %>
<% after_events_array = [] %>

<% this_year = Time.new.to_s.slice(0...4).to_i %>

<div id="events-list">
  <div class="ui modal">
    <div id="modal-header">このアプリの使い方</div>
    <div class="ui center aligned grid" id="frame-of-carousel-image">
      <div class="carousel-image content center aligned fourteen wide column">
        <img class="operation-image" src="/img/no-image2.png"/>
        <img class="operation-image" src="/img/no-image2.png"/>
        <img class="operation-image" src="/img/no-image2.png"/>
        <img class="operation-image" src="/img/no-image2.png"/>
        <img class="operation-image" src="/img/no-image2.png"/>
      </div>
    </div>
    <div class="ui center aligned grid">
      <div class="carousel-explanation content left aligned fourteen wide column">
        <p>イベントを投稿したい場合は "イベント投稿" をタップします。</p>
        <p>イベントの詳細を入力して投稿ボタンを押すとイベントを投稿できます。</p>
        <p>様々なイベントの表示する場合は "イベント一覧" をタップします。</p>
        <p>イベントの表示方法は画面内のセレクトボックスから変更できます。</p>
        <p>あるイベントの詳細情報を知りたい場合は、そのイベントの詳細ボタンをタップしましょう。</p>
      </div>
    </div>
    <div class="slick-dotted ui center aligned grid">
      <ul class="slick-dots" id="original-dots"></ul>
    </div>
    <div class="actions">
      <div class="ui center aligned grid">
        <div class="center aligned seven wide column">
          <button class="ui fluid red button">
            OK
          </button>
        </div>
      </div>
    </div>
  </div>
  <div class="ui center aligned grid">
    <div class="fourteen wide column">
      <div id="events-list-in-japanese">イベント一覧</div>
    </div>
  </div>
  <div class="ui center aligned grid" id="search-events">
    <div class="fourteen wide columm">
      <div class="item">
        <form action="/events" accept-charset="UTF-8" method="get">
          <div class="ui icon input">
            <input name="utf8" type="hidden" value="✓">
            <input type="text" name="search" placeholder="例：デザイン">
            <i class="search link icon"></i>
            <input type="submit" value="検索">
          </div>
        </form>
      </div>
    </div>
  </div>
  <div class="ui center aligned grid">
    <div class="right aligned fourteen wide column" id="select-box">
      <select class="select-box-show-events" v-eventchange>
        <option value="all-events">イベント一覧</option>
        <option value="my-events">自分の投稿したイベント</option>
        <option value="favorite-events">お気に入りしたイベント</option>
        <option value="before-events"><%= this_year - 1 %>年以前のイベント</option>
        <option value="current-events"><%= this_year %>年のイベント</option>
        <option value="after-events"><%= this_year + 1 %>年以降のイベント</option>
      </select>
    </div>
  </div>
</div>
<div class="various-events-list">
  <% if @all_events.empty? then %>
    <%= render partial: "partials/events/no-event-message", locals: { message: "投稿されたイベントはまだ存在していません。", classname: "all-events" } %>
  <% else %>
    <div class="all-events animated bounce">
      <% @all_events.each do |event| %>
        <%= render partial: "partials/events/list", locals: { event: event } %>
      <% end %>
    </div>
  <% end %>
  <% if @current_user_events.empty? then %>
    <%= render partial: "partials/events/no-event-message", locals: { message: "あなたが投稿したイベントはまだ存在していません。", classname: "my-events" } %>
  <% else %>
    <div class="my-events animated bounce">
      <% @current_user_events.each do |event| %>
        <%= render partial: "partials/events/list", locals: { event: event } %>
      <% end %>
    </div>
  <% end %>
  <% if @favorite_events.empty? then %>
    <%= render partial: "partials/events/no-event-message", locals: { message: "投稿されたイベントはまだ存在していません。", classname: "favorite-events" } %>
  <% else %>
    <div class="favorite-events animated bounce">
      <% @favorite_events.each do |event| %>
        <%= render partial: "partials/events/list", locals: { event: Event.find(event.id) } %>
      <% end %>
    </div>
  <% end %>
  <div class="before-events animated bounce" id="frame-of-before-events">
    <% @all_events.each do |event| %>
      <% starting_year = Time.new(event.starting_year).to_s.slice(0...4).to_i %>

      <% if starting_year < this_year then %>
        <% before_events_array.push(event) %>
        <%= render partial: "partials/events/list", locals: { event: event } %>
      <% end %>
    <% end %>
  </div>
  <div class="current-events animated bounce" id="frame-of-current-events">
    <% @all_events.each do |event| %>
      <% starting_year = Time.new(event.starting_year).to_s.slice(0...4).to_i %>

      <% if starting_year == this_year then %>
        <% current_events_array.push(event) %>
        <%= render partial: "partials/events/list", locals: { event: event } %>
      <% end %>
    <% end %>
  </div>
  <div class="after-events animated bounce" id="frame-of-after-events">
    <% @all_events.each do |event| %>
      <% starting_year = Time.new(event.starting_year).to_s.slice(0...4).to_i %>

      <% if starting_year > this_year then %>
        <% after_events_array.push(event) %>
        <%= render partial: "partials/events/list", locals: { event: event } %>
      <% end %>
    <% end %>
  </div>
  <% if before_events_array.empty? then %>
    <%= render partial: "partials/events/no-event-message", locals: { message: "既に終了したイベントはまだ存在していません。", classname: "before-events" } %>
  <% end %>
  <% if current_events_array.empty? then %>
    <%= render partial: "partials/events/no-event-message", locals: { message: "現在開催中のイベントはまだ存在していません。", classname: "current-events" } %>
  <% end %>
  <% if after_events_array.empty? then %>
    <%= render partial: "partials/events/no-event-message", locals: { message: "今後開催されるイベントはまだ存在していません。", classname: "after-events" } %>
  <% end %>
</div>
<a href="#" class="back-to-top">▲</a>

<script>
  // オプションのelの要素(今回でいうとHTMLの#events-list)の中に、HTMLの.various-events-listの要素を含めると、
  // なぜか以下の関数が動かなくなってしまうため、#events-listの中に.various-events-listは含めていない。
  // オプションのelの要素(今回でいうとHTMLの#events-list)に含めていない部分(今回でいうと.various-events-list)は、仕方なくjQueryを用いて実装することにした。
  var vm = new Vue({
    el: "#events-list",
    methods: {
      selectDisplay: function(className, display) {
        var elements = document.getElementsByClassName(className);
        for(i=0;i<elements.length;i++){
          elements[i].style.display = display;
        }
      },
      initialDisplay: function() {
        this.selectDisplay("all-events", "block")
        this.selectDisplay("my-events", "none")
        this.selectDisplay("favorite-events", "none")
        this.selectDisplay("before-events", "none")
        this.selectDisplay("current-events", "none")
        this.selectDisplay("after-events", "none")
      },
    },
    mounted: function() {
      setTimeout(this.initialDisplay, 300);
    },
    directives: {
      eventchange: {
        bind: function (el) {
          el.addEventListener("change", function() {
            var selectBoxVal = el.value;
            if(selectBoxVal == "all-events"){
              vm.selectDisplay("all-events", "block")
              vm.selectDisplay("my-events", "none")
              vm.selectDisplay("favorite-events", "none")
              vm.selectDisplay("before-events", "none")
              vm.selectDisplay("current-events", "none")
              vm.selectDisplay("after-events", "none")
            }else if(selectBoxVal == "my-events") {
              vm.selectDisplay("all-events", "none")
              vm.selectDisplay("my-events", "block")
              vm.selectDisplay("favorite-events", "none")
              vm.selectDisplay("before-events", "none")
              vm.selectDisplay("current-events", "none")
              vm.selectDisplay("after-events", "none")
            }else if(selectBoxVal == "favorite-events") {
              vm.selectDisplay("all-events", "none")
              vm.selectDisplay("my-events", "none")
              vm.selectDisplay("favorite-events", "block")
              vm.selectDisplay("before-events", "none")
              vm.selectDisplay("current-events", "none")
              vm.selectDisplay("after-events", "none")
            }else if(selectBoxVal == "before-events") {
              vm.selectDisplay("all-events", "none")
              vm.selectDisplay("my-events", "none")
              vm.selectDisplay("favorite-events", "none")
              vm.selectDisplay("before-events", "block")
              vm.selectDisplay("current-events", "none")
              vm.selectDisplay("after-events", "none")
            }else if(selectBoxVal == "current-events") {
              vm.selectDisplay("all-events", "none")
              vm.selectDisplay("my-events", "none")
              vm.selectDisplay("favorite-events", "none")
              vm.selectDisplay("before-events", "none")
              vm.selectDisplay("current-events", "block")
              vm.selectDisplay("after-events", "none")
            }else if(selectBoxVal == "after-events") {
              vm.selectDisplay("all-events", "none")
              vm.selectDisplay("my-events", "none")
              vm.selectDisplay("favorite-events", "none")
              vm.selectDisplay("before-events", "none")
              vm.selectDisplay("current-events", "none")
              vm.selectDisplay("after-events", "block")
            }
          });
        }
      }
    }
  })

// 上記の通り、なぜかオプションのelの中に.various-events-listを含めることが出来ないため、
// Vue.jsで実装出来ていない部分は仕方なくjQueryを使用して実装した。
  $(function() {
    if($.cookie('btnFlg') !== 'on') {
      $('.ui.modal')
        .modal('show')
      ;
    }

    $(".actions .ui.grid .column .button").click(function(){
      $.cookie('btnFlg', 'on', { expires: 30,path: '/' });
    });
  });

  (function() {
    $('.carousel-image').slick({
      asNavFor: '.carousel-explanation',
      dots: true,
      arrows: false,
      appendDots:$("#original-dots"),
    });

    $('.carousel-explanation').slick({
      asNavFor: '.carousel-image',
      arrows: false,
      fade: true,
    });
  })();

  $(function(){
    setTimeout(function(){
      $(".animated").waypoint({
        handler: function(direction) {
          if (direction === "down") {
            $(this.element).addClass("fadeInUp");
            this.destroy();
          }
        },
        offset: "100%"
      });
    },300);
  });

  (function() {
    $(window).scroll(function() {
      $(this).scrollTop() >= 150 ? $(".back-to-top").fadeIn() : $(".back-to-top").fadeOut()
    });

    $(".back-to-top").click(function() {
      $("html, body").animate({
        scrollTop: 0
      },
        600
      );
      return false;
    });
  })();
</script>
