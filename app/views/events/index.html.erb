<div id="events-list">
  <div class="ui modal">
    <div id="modal-header">このアプリの使い方</div>
    <div class="ui center aligned grid" id="frame-of-carousel-image">
      <div class="carousel-image content center aligned fourteen wide column">
        <img class="operation-image" src="/img/no-image2.png"/>
        <img class="operation-image" src="/img/no-image2.png"/>
        <img class="operation-image" src="/img/no-image2.png"/>
        <img class="operation-image" src="/img/no-image2.png"/>
        <img class="operation-image" src="/img/no-image2.png"/>
      </div>
    </div>
    <div class="ui center aligned grid">
      <div class="carousel-explanation content left aligned fourteen wide column">
        <p>イベントを投稿したい場合は "イベント投稿" をタップします。</p>
        <p>イベントの詳細を入力して投稿ボタンを押すとイベントを投稿できます。</p>
        <p>様々なイベントの表示する場合は "イベント一覧" をタップします。</p>
        <p>イベントの表示方法は画面内のセレクトボックスから変更できます。</p>
        <p>あるイベントの詳細情報を知りたい場合は、そのイベントの詳細ボタンをタップしましょう。</p>
      </div>
    </div>
    <div class="slick-dotted ui center aligned grid">
      <ul class="slick-dots" id="original-dots"></ul>
    </div>
    <div class="actions">
      <div class="ui center aligned grid">
        <div class="center aligned seven wide column">
          <button class="ui fluid red button" @click="setCookies()">
            OK
          </button>
        </div>
      </div>
    </div>
  </div>
  <div class="ui center aligned grid">
    <div class="fourteen wide column">
      <div id="events-list-in-japanese">イベント一覧</div>
    </div>
  </div>
  <div class="ui center aligned grid" id="search-events">
    <div class="fourteen wide columm">
      <div class="item">
        <form action="/events" accept-charset="UTF-8" method="get">
          <div class="ui icon input">
            <input name="utf8" type="hidden" value="✓">
            <input type="text" name="search" placeholder="例：デザイン">
            <i class="search link icon"></i>
            <input type="submit" value="検索">
          </div>
        </form>
      </div>
    </div>
  </div>
  <div class="ui center aligned grid">
    <div class="right aligned fourteen wide column" id="select-box">
      <select class="select-box-show-events" v-eventchange>
        <option value="all-events">イベント一覧</option>
        <option value="my-events">自分の投稿したイベント</option>
        <option value="favorite-events">お気に入りしたイベント</option>
        <option value="before-events">{{ thisYear - 1 }}年以前のイベント</option>
        <option value="current-events">{{ thisYear }}年のイベント</option>
        <option value="after-events">{{ thisYear + 1 }}年以降のイベント</option>
      </select>
    </div>
  </div>
  <div class="various-events-list">
    <div class="all-events-in-all-cases">
      <% if @all_events.empty? %>
        <%= render partial: "partials/events/no-event-message", locals: { message: "投稿されたイベントはまだ存在していません。", classname: "all-events" } %>
      <% else %>
        <div class="all-events animated bounce">
          <% @all_events.each do |event| %>
            <%= render partial: "partials/events/list", locals: { event: event } %>
          <% end %>
        </div>
      <% end %>
    </div>
    <div class="my-events-in-all-cases">
      <% if @current_user_events.empty? %>
        <%= render partial: "partials/events/no-event-message", locals: { message: "あなたが投稿したイベントはまだ存在していません。", classname: "my-events" } %>
      <% else %>
        <div class="my-events animated bounce">
          <% @current_user_events.each do |event| %>
            <%= render partial: "partials/events/list", locals: { event: event } %>
          <% end %>
        </div>
      <% end %>
    </div>
    <div class="favorite-events-in-all-cases">
      <% if @favorite_events.empty? %>
        <%= render partial: "partials/events/no-event-message", locals: { message: "投稿されたイベントはまだ存在していません。", classname: "favorite-events" } %>
      <% else %>
        <div class="favorite-events animated bounce">
          <% @favorite_events.each do |event| %>
            <%= render partial: "partials/events/list", locals: { event: Event.find(event.id) } %>
          <% end %>
        </div>
      <% end %>
    </div>
    <div class="before-events-in-all-cases">
      <template v-if="isBeforeEvents == 'true'">
        <div class="before-events animated bounce" id="frame-of-before-events">
          <% @all_events.each do |event| %>
            <template v-if="new Date('<%= event.starting_year %>').getFullYear() < thisYear">
              <%= render partial: "partials/events/list", locals: { event: event } %>
            </template>
          <% end %>
        </div>
      </template>
      <template v-else>
        <%= render partial: "partials/events/no-event-message", locals: { message: "既に終了したイベントはまだ存在していません。", classname: "before-events" } %>
      </template>
    </div>
    <div class="current-events-in-all-cases">
      <template v-if="isCurrentEvents == 'true'">
        <div class="current-events animated bounce" id="frame-of-current-events">
          <% @all_events.each do |event| %>
            <template v-if="new Date('<%= event.starting_year %>').getFullYear() == thisYear">
              <%= render partial: "partials/events/list", locals: { event: event } %>
            </template>
          <% end %>
        </div>
      </template>
      <template v-else>
        <%= render partial: "partials/events/no-event-message", locals: { message: "現在開催中のイベントはまだ存在していません。", classname: "current-events" } %>
      </template>
    </div>
    <div class="after-events-in-all-cases">
      <template v-if="isAfterEvents == 'true'">
        <div class="after-events animated bounce" id="frame-of-after-events">
          <% @all_events.each do |event| %>
            <template v-if="new Date('<%= event.starting_year %>').getFullYear() > thisYear">
              <%= render partial: "partials/events/list", locals: { event: event } %>
            </template>
          <% end %>
        </div>
      </template>
      <template v-else>
        <%= render partial: "partials/events/no-event-message", locals: { message: "今後開催されるイベントはまだ存在していません。", classname: "after-events" } %>
      </template>
    </div>
  </div>
  <a href="javascript:void(0)" class="back-to-top" @click="movetoTop()">▲</a>
</div>

<script>
  var vm = new Vue({
    el: "#events-list",
    data: {
      thisYear: new Date().getFullYear(),
      beforeEventsArray: [],
      currentEventsArray: [],
      afterEventsArray: [],
      isBeforeEvents: "",
      isCurrentEvents: "",
      isAfterEvents: "",
    },
    methods: {
      setCookies: function() {
        Cookies.set('seeTutorial?', 'yes');
      },
      showModal: function() {
        if (Cookies.get('seeTutorial?') !== 'yes') {
          $('.ui.modal').modal('show');
        };
      },
      carousel: function() {
        $('.carousel-image').slick({
          asNavFor: '.carousel-explanation',
          dots: true,
          arrows: false,
          appendDots:$("#original-dots"),
        });
        $('.carousel-explanation').slick({
          asNavFor: '.carousel-image',
          arrows: false,
          fade: true,
        });
      },
      judgeNumberofEvents: function() {
        <% @all_events.each do |event| %>
          var startingYear = new Date('<%= event.starting_year %>').getFullYear();
          if (startingYear < this.thisYear) {
            this.beforeEventsArray.push(event);
            this.isBeforeEvents = "true";
          } else if (startingYear == this.thisYear) {
            this.currentEventsArray.push(event);
            this.isCurrentEvents = "true";
          } else if (startingYear > this.thisYear) {
            this.afterEventsArray.push(event);
            this.isAfterEvents = "true";
          };
        <% end %>
      },
      selectDisplay: function(className, display) {
        var elements = document.getElementsByClassName(className);
        for(i=0;i<elements.length;i++){
          elements[i].style.display = display;
        }
      },
      initialDisplay: function() {
        this.selectDisplay("all-events", "block");
        this.selectDisplay("my-events", "none");
        this.selectDisplay("favorite-events", "none");
        this.selectDisplay("before-events", "none");
        this.selectDisplay("current-events", "none");
        this.selectDisplay("after-events", "none");
      },
      showBacktoTop: function() {
        window.addEventListener("scroll", function() {
          var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
          scrollTop >= 50 ? $(".back-to-top").fadeIn() : $(".back-to-top").fadeOut();
        });
      },
      movetoTop: function() {
        $("html, body").animate({scrollTop: 0}, 600);
      },
      appearanceAnimation: function() {
        $(".animated").waypoint({
          handler: function(direction) {
            if (direction === "down") {
              $(this.element).addClass("fadeInUp");
              this.destroy();
            };
          },
          offset: "100%"
        });
      },
    },
    created: function() {
      this.judgeNumberofEvents();
    },
    mounted: function() {
      this.showModal();
      this.carousel();
      this.initialDisplay();
      this.appearanceAnimation();
      this.showBacktoTop();
    },
    directives: {
      eventchange: {
        bind: function(el) {
          el.addEventListener("change", function() {
            var selectBoxVal = el.value;
            if (selectBoxVal == "all-events"){
              vm.selectDisplay("all-events", "block");
              vm.selectDisplay("my-events", "none");
              vm.selectDisplay("favorite-events", "none");
              vm.selectDisplay("before-events", "none");
              vm.selectDisplay("current-events", "none");
              vm.selectDisplay("after-events", "none");
            } else if (selectBoxVal == "my-events") {
              vm.selectDisplay("all-events", "none");
              vm.selectDisplay("my-events", "block");
              vm.selectDisplay("favorite-events", "none");
              vm.selectDisplay("before-events", "none");
              vm.selectDisplay("current-events", "none");
              vm.selectDisplay("after-events", "none");
            } else if (selectBoxVal == "favorite-events") {
              vm.selectDisplay("all-events", "none");
              vm.selectDisplay("my-events", "none");
              vm.selectDisplay("favorite-events", "block");
              vm.selectDisplay("before-events", "none");
              vm.selectDisplay("current-events", "none");
              vm.selectDisplay("after-events", "none");
            } else if (selectBoxVal == "before-events") {
              vm.selectDisplay("all-events", "none");
              vm.selectDisplay("my-events", "none");
              vm.selectDisplay("favorite-events", "none");
              vm.selectDisplay("before-events", "block");
              vm.selectDisplay("current-events", "none");
              vm.selectDisplay("after-events", "none");
            } else if (selectBoxVal == "current-events") {
              vm.selectDisplay("all-events", "none");
              vm.selectDisplay("my-events", "none");
              vm.selectDisplay("favorite-events", "none");
              vm.selectDisplay("before-events", "none");
              vm.selectDisplay("current-events", "block");
              vm.selectDisplay("after-events", "none");
            } else if (selectBoxVal == "after-events") {
              vm.selectDisplay("all-events", "none");
              vm.selectDisplay("my-events", "none");
              vm.selectDisplay("favorite-events", "none");
              vm.selectDisplay("before-events", "none");
              vm.selectDisplay("current-events", "none");
              vm.selectDisplay("after-events", "block");
            };
          });
        }
      }
    }
  });
</script>
